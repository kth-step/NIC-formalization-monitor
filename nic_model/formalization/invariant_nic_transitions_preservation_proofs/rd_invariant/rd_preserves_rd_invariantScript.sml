open HolKernel Parse boolLib bossLib;
open helperTactics;
open rd_transition_invariant_lemmasTheory;
open rdInvariantTheory;

val _ = new_theory "rd_preserves_rd_invariant";

val RD_AUTONOMOUS_TRANSITION_PRESERVES_RD_INVARIANT_lemma = store_thm (
  "RD_AUTONOMOUS_TRANSITION_PRESERVES_RD_INVARIANT_lemma",
  ``!nic env nic' READABLE.
    RD_AUTONOMOUS_TRANSITION nic env nic' /\
    TX_INVARIANT nic READABLE /\
    RD_INVARIANT nic
    ==>
    RD_INVARIANT nic'``,
  REPEAT GEN_TAC THEN
  DISCH_TAC THEN
  SPLIT_ASM_TAC THEN
  REWRITE_TAC [RD_INVARIANT_def] THEN
  ASSUME_TAC (CONJ_ANT_TO_HYP (SPEC_ALL RD_AUTONOMOUS_TRANSITION_PRESERVES_RD_INVARIANT_CURRENT_BD_PA_lemma)) THEN
  ASSUME_TAC (UNDISCH (SPEC_ALL RD_AUTONOMOUS_TRANSITION_PRESERVES_RD_INVARIANT_RD_CLEARS_BD_QUEUE_lemma)) THEN
  ASSUME_TAC (UNDISCH (SPEC_ALL RD_AUTONOMOUS_TRANSITION_PRESERVES_RD_INVARIANT_RX_ADVANCES_BD_QUEUE_lemma)) THEN
  ASM_REWRITE_TAC []);

val _ = export_theory();

